name: "Build && Release"
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  build:
    name: Build & Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Linux Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ninja-build libgtk-3-dev
          sudo apt-get install -y appstream
          sudo apt-get install -y ninja-build cmake clang libgtk-3-dev
          sudo apt-get install -y libunwind-dev
          # Agregar dependencias de GStreamer
          sudo apt-get install -y \
            libgstreamer1.0-dev \
            libgstreamer-plugins-base1.0-dev \
            libgstreamer-plugins-bad1.0-dev \
            gstreamer1.0-plugins-base \
            gstreamer1.0-plugins-good \
            gstreamer1.0-plugins-bad \
            gstreamer1.0-plugins-ugly \
            gstreamer1.0-libav \
            gstreamer1.0-tools \
            gstreamer1.0-x \
            gstreamer1.0-alsa \
            gstreamer1.0-gl \
            gstreamer1.0-gtk3 \
            gstreamer1.0-qt5 \
            gstreamer1.0-pulseaudio

      - name: Set Up Java
        uses: actions/setup-java@v3.12.0
        with:
          distribution: 'oracle'
          java-version: '17'

      - name: Set Up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.4'
          channel: 'stable'

      - name: Install Dependencies
        run: flutter pub get

      - name: Build APK & AAB
        run: |
          flutter build apk --release
          flutter build appbundle

      - name: Build Linux
        run: |
          flutter config --enable-linux-desktop
          flutter build linux --release

      - name: Create DEB Package
        run: |
          mkdir -p build/linux/x64/release/debian/DEBIAN
          echo "Package: finmusic
          Version: ${{ env.VERSION }}
          Architecture: amd64
          Maintainer: Your Name <your@email.com>
          Description: FinMusic Application
          Depends: libgtk-3-0
          " > build/linux/x64/release/debian/DEBIAN/control
          dpkg-deb --build build/linux/x64/release/debian build/linux/x64/release/finmusic.deb

      - name: Create AppImage
        run: |
          wget -O appimagetool "https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage"
          chmod +x appimagetool
          ./appimagetool build/linux/x64/release/bundle build/linux/x64/release/finmusic.AppImage

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Releases
          path: |
            build/app/outputs/flutter-apk/app-release.apk
            build/app/outputs/bundle/release/app-release.aab
            build/linux/x64/release/finmusic.deb
            build/linux/x64/release/finmusic.AppImage

      - name: Extract version from pubspec.yaml
        id: extract_version
        run: |
          version=$(grep '^version: ' pubspec.yaml | cut -d ' ' -f 2 | tr -d '\r')
          echo "VERSION=$version" >> $GITHUB_ENV

      - name: Check if Tag Exists
        id: check_tag
        run: |
          if git rev-parse "v${{ env.VERSION }}" >/dev/null 2>&1; then
            echo "TAG_EXISTS=true" >> $GITHUB_ENV
          else
            echo "TAG_EXISTS=false" >> $GITHUB_ENV
          fi

      - name: Modify Tag
        if: env.TAG_EXISTS == 'true'
        id: modify_tag
        run: |
          new_version="${{ env.VERSION }}-build-${{ github.run_number }}"
          echo "VERSION=$new_version" >> $GITHUB_ENV

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: >-
            build/app/outputs/flutter-apk/app-release.apk,
            build/app/outputs/bundle/release/app-release.aab,
            build/linux/x64/release/finmusic.deb,
            build/linux/x64/release/finmusic.AppImage
          tag: v${{ env.VERSION }}
          token: ${{ secrets.TOKEN }}