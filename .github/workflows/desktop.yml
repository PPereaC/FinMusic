name: Flutter Linux Packaging - FinMusic

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable'
      
      - name: Get version from pubspec.yaml
        id: version
        run: |
          VERSION=$(grep 'version:' pubspec.yaml | awk '{print $2}' | tr -d '"')
          echo "Extracted version: $VERSION"
          echo "::set-output name=version::$VERSION"
      
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            clang cmake ninja-build pkg-config \
            libgtk-3-dev liblzma-dev \
            gstreamer1.0-plugins-base gstreamer1.0-plugins-good \
            gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly \
            libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev \
            dpkg

      - name: Build Linux (Release)
        run: |
          flutter config --enable-linux-desktop
          flutter pub get
          flutter build linux --release

      - name: Generate .deb package
        run: |
          # Crear estructura de directorios
          mkdir -p deb_package/{usr/local/bin,usr/share/icons/hicolor/512x512/apps,usr/share/applications,DEBIAN}
      
          # Copiar archivos
          cp -r build/linux/x64/release/bundle/* deb_package/usr/local/bin/
          cp assets/icon.png deb_package/usr/share/icons/hicolor/512x512/apps/finmusic.png
      
          # Archivo .desktop
          cat > deb_package/usr/share/applications/finmusic.desktop <<'EOL'
          [Desktop Entry]
          Name=FinMusic
          Exec=/usr/local/bin/finmusic
          Icon=finmusic
          Type=Application
          Categories=Audio;Music;
          EOL
          
          # Archivo control con versi√≥n del pubspec.yaml
          cat > deb_package/DEBIAN/control <<EOL
          Package: finmusic
          Version: ${{ steps.version.outputs.version }}
          Section: sound
          Priority: optional
          Architecture: amd64
          Maintainer: Pablo <pereacampospablo@gmail.com>
          Description: Reproductor de m√∫sica FinMusic
          Depends: libgtk-3-0, liblzma5, gstreamer1.0-plugins-base
          EOL
    
          # Build .deb
          dpkg-deb --build deb_package finmusic_${{ steps.version.outputs.version }}.deb

      - name: Generate AppImage
        run: |
          # Verificar contenido del directorio bundle
          echo "=== Contenido de build/linux/x64/release/bundle ==="
          ls -la build/linux/x64/release/bundle/
      
          # Nombre del ejecutable (en min√∫sculas)
          EXECUTABLE="finmusic"
          
          # Verificar si existe el ejecutable
          if [ ! -f "build/linux/x64/release/bundle/$EXECUTABLE" ]; then
            echo "‚ö†Ô∏è El ejecutable no existe con ese nombre, buscando alternativas..."
            EXECUTABLE=$(ls build/linux/x64/release/bundle | grep -E '^[a-z0-9_]+$' | grep -v '\.desktop\|\.so\|\.png')
            echo "üîç Usando ejecutable detectado: $EXECUTABLE"
          fi
      
          # Verificar archivos esenciales
          if [ ! -f "build/linux/x64/release/bundle/$EXECUTABLE" ]; then
            echo "‚ùå Error: No se encontr√≥ el ejecutable principal"
            exit 1
          fi
      
          if [ ! -f "build/linux/x64/release/bundle/$EXECUTABLE.desktop" ]; then
            echo "‚ùå Error: No se encontr√≥ el archivo .desktop"
            exit 1
          fi
      
          ICON_PATH="build/linux/x64/release/bundle/data/flutter_assets/assets/icon.png"
          if [ ! -f "$ICON_PATH" ]; then
            echo "‚ö†Ô∏è Advertencia: No se encontr√≥ el icono en la ruta esperada"
            ICON_PATH=$(find build/linux/x64/release/bundle -name 'icon.png' | head -n 1)
            [ -z "$ICON_PATH" ] && echo "‚ùå Error: No se encontr√≥ ning√∫n icono" && exit 1
            echo "üîç Usando icono encontrado en: $ICON_PATH"
          fi
      
          # Descargar linuxdeploy
          wget -q https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
          chmod +x linuxdeploy-x86_64.AppImage
      
          # Generar AppImage (mostrando comandos para debug)
          echo "‚ñ∂Ô∏è Generando AppImage..."
          ./linuxdeploy-x86_64.AppImage \
            --appdir AppDir \
            --executable "build/linux/x64/release/bundle/$EXECUTABLE" \
            --desktop-file "build/linux/x64/release/bundle/$EXECUTABLE.desktop" \
            --icon-file "$ICON_PATH" \
            --output appimage \
            --verbosity=3
      
          # Renombrar con versi√≥n
          mv *.AppImage "finmusic_${{ steps.version.outputs.version }}.AppImage"
          echo "‚úÖ AppImage generado correctamente!"

      - name: Create or Update Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.version }}
          release_name: FinMusic ${{ steps.version.outputs.version }}
          files: |
            finmusic_${{ steps.version.outputs.version }}.deb
            finmusic_${{ steps.version.outputs.version }}.AppImage
          draft: false
          prerelease: false
          replace_assets: true
