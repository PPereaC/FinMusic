name: Flutter Linux Packaging - FinMusic

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Necesario para operaciones de tag

      - name: Setup Git Config
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git config --global push.default simple  # Evita ambigüedad en push

      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable'
      
      - name: Get version from pubspec.yaml
        id: version
        run: |
          VERSION=$(grep 'version:' pubspec.yaml | awk '{print $2}' | tr -d '"')
          echo "Extracted version: $VERSION"
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "::set-output name=version::$VERSION"

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            clang cmake ninja-build pkg-config \
            libgtk-3-dev liblzma-dev \
            gstreamer1.0-plugins-base gstreamer1.0-plugins-good \
            gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly \
            libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev \
            dpkg

      - name: Build Linux (Release)
        run: |
          flutter config --enable-linux-desktop
          flutter pub get
          flutter build linux --release

      - name: Generate .deb package
        run: |
          mkdir -p deb_package/{usr/local/bin,usr/share/icons/hicolor/512x512/apps,usr/share/applications,DEBIAN}
          cp -r build/linux/x64/release/bundle/* deb_package/usr/local/bin/
          cp assets/icon.png deb_package/usr/share/icons/hicolor/512x512/apps/finmusic.png
          
          cat > deb_package/usr/share/applications/finmusic.desktop <<'EOL'
          [Desktop Entry]
          Name=FinMusic
          Exec=/usr/local/bin/finmusic
          Icon=finmusic
          Type=Application
          Categories=Audio;Music;
          EOL
          
          cat > deb_package/DEBIAN/control <<EOL
          Package: finmusic
          Version: ${{ env.VERSION }}
          Section: sound
          Priority: optional
          Architecture: amd64
          Maintainer: Pablo <pereacampospablo@gmail.com>
          Description: Reproductor de música FinMusic
          Depends: libgtk-3-0, liblzma5, gstreamer1.0-plugins-base
          EOL
    
          dpkg-deb --build deb_package finmusic_${{ env.VERSION }}.deb
          echo "DEB_FILE=finmusic_${{ env.VERSION }}.deb" >> $GITHUB_ENV

      - name: Generate AppImage
        run: |
          EXECUTABLE="FinMusic"
          
          # Crear .desktop
          cat > "build/linux/x64/release/bundle/$EXECUTABLE.desktop" <<'EOL'
          [Desktop Entry]
          Name=FinMusic
          Exec=$EXECUTABLE
          Icon=finmusic
          Type=Application
          Categories=Audio;Music;
          EOL
          
          # Buscar icono
          ICON_FILE=$(find build/linux/x64/release/bundle -name 'icon.png' | head -n1 || echo "")
          [ -z "$ICON_FILE" ] && ICON_FILE="/dev/null"
          
          wget -q https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
          chmod +x linuxdeploy-x86_64.AppImage
          
          ./linuxdeploy-x86_64.AppImage \
            --appdir AppDir \
            --executable "build/linux/x64/release/bundle/$EXECUTABLE" \
            --desktop-file "build/linux/x64/release/bundle/$EXECUTABLE.desktop" \
            --icon-file "$ICON_FILE" \
            --output appimage
          
          mv *.AppImage "FinMusic-${{ env.VERSION }}.AppImage"
          chmod +x "FinMusic-${{ env.VERSION }}.AppImage"
          echo "APPIMAGE_FILE=FinMusic-${{ env.VERSION }}.AppImage" >> $GITHUB_ENV

      - name: Create Tag
        run: |
          git tag -a "v${{ env.VERSION }}" -m "Release v${{ env.VERSION }}"
          git push origin "v${{ env.VERSION }}"

      - name: Create Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.VERSION }}
          name: FinMusic ${{ env.VERSION }}
          files: |
            ${{ env.DEB_FILE }}
            ${{ env.APPIMAGE_FILE }}
          draft: false
          prerelease: false
          replace_assets: true
